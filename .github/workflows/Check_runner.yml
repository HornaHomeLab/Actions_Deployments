name: Check runner

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        default: "development"
    outputs:
      label:
        value: ${{ jobs.Runner.outputs.label }}
      environment_up:
        value: ${{ jobs.Runner.outputs.environment_up }}

jobs:
  Runner:
    environment: ${{ inputs.environment }}
    runs-on: ${{ vars.DEFAULT_RUNNER }}
    outputs:
      label: ${{ steps.runner.outputs.label }}
      environment_up: ${{ steps.env_status.outputs.env_up }}
    env:
      HOST_RUNNER: ${{ vars.HOST }}
    steps:
      - name: Get label
        id: runner
        run: |

          if [ -z "$HOST_RUNNER" ]; then
              echo "Deployment Environment variable HOST is not set"
              exit 1
          fi

          echo "label=$HOST_RUNNER" >> $GITHUB_OUTPUT

      - name: Check environment is running
        id: env_status
        env:
          HOST_RUNNER_LABEL: ${{ steps.runner.outputs.label }}
          CONTAINER_RUNNER_LABEL: ${{ vars.RUNNER_LABEL }}
        shell: pwsh
        run: |
          $APIResponse = Invoke-RestMethod -Headers @{
            "Accept" = "application/vnd.github+json"
            "Authorization" = "Bearer ${{ secrets.GH_RUNNERS_MGMT_TOKEN }}"
            "X-GitHub-Api-Version" = "2022-11-28"
          } -Uri "https://api.github.com/orgs/HornaHomeLab/actions/runners"

          $RunnerList = $APIResponse.runners

          $EnvRunner = $RunnerList | Where-Object {$_.labels.name -contains "$($env:CONTAINER_RUNNER_LABEL)"}
          $EnvHost = $RunnerList | Where-Object {$_.name -contains "$($env:HOST_RUNNER_LABEL)"}

          if (-not ("online" -in $EnvHost.status)){

            Write-Host "Environment is not running"
            Add-Content -Path $env:GITHUB_STEP_SUMMARY -Value "# :heavy_multiplication_x: Environment is not running :heavy_multiplication_x:"
            Add-Content -Path $env:GITHUB_OUTPUT -Value "env_up=false"
            exit 1

          }else{

            Write-Host "Container Runners online: $($EnvRunner.count)"
            Add-Content -Path $env:GITHUB_STEP_SUMMARY -Value "- Environment **${{ inputs.environment }}** is up and running :rocket:"
            Add-Content -Path $env:GITHUB_STEP_SUMMARY -Value "   - Container runners online: $($EnvRunner.count)"

            Add-Content -Path $env:GITHUB_STEP_SUMMARY -Value "- Host runner properties:"
            Add-Content -Path $env:GITHUB_STEP_SUMMARY -Value "   - name: **$($EnvHost.name)**"
            Add-Content -Path $env:GITHUB_STEP_SUMMARY -Value "   - os: **$($EnvHost.os)**"
            Add-Content -Path $env:GITHUB_STEP_SUMMARY -Value "   - busy: **$($EnvHost.busy)**"
            Add-Content -Path $env:GITHUB_OUTPUT -Value "env_up=true"
          }
    